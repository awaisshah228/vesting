{
  "address": "0x7960990D5d1365313E456f88cAB8af2fb2037022",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Cancelled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "claimer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Claim",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Vest",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "currentTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endTime",
          "type": "uint256"
        }
      ],
      "name": "calcDistribution",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "scheduleNumber",
          "type": "uint256"
        }
      ],
      "name": "claim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "locked",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "accounts",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amount",
          "type": "uint256[]"
        },
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isFixed",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "cliffWeeks",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "vestingWeeks",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startTime",
          "type": "uint256"
        }
      ],
      "name": "multiVest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "numberOfSchedules",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "scheduleId",
          "type": "uint256"
        }
      ],
      "name": "rug",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "schedules",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "totalAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "claimedAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "cliffTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endTime",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isFixed",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isFixed",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "cliffWeeks",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "vestingWeeks",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startTime",
          "type": "uint256"
        }
      ],
      "name": "vest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xf31229201007262b084324ed2e3980e940d6d042e04a2eb5e465ac82f3af278b",
  "receipt": {
    "to": null,
    "from": "0xfb59B91646cd0890F3E5343384FEb746989B66C7",
    "contractAddress": "0x7960990D5d1365313E456f88cAB8af2fb2037022",
    "transactionIndex": 2,
    "gasUsed": "1835375",
    "logsBloom": "0x
    "blockHash": "0x0452c79ac56c99588fd215f9462a5e398abe30b1ebba1bc137cef453f672a31d",
    "transactionHash": "0xf31229201007262b084324ed2e3980e940d6d042e04a2eb5e465ac82f3af278b",
    "logs": [
      {
        "transactionIndex": 2,
        "blockNumber": 26504152,
        "transactionHash": "0xf31229201007262b084324ed2e3980e940d6d042e04a2eb5e465ac82f3af278b",
        "address": "0x7960990D5d1365313E456f88cAB8af2fb2037022",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000fb59b91646cd0890f3e5343384feb746989b66c7"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x0452c79ac56c99588fd215f9462a5e398abe30b1ebba1bc137cef453f672a31d"
      }
    ],
    "blockNumber": 26504152,
    "cumulativeGasUsed": "7453644",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "30e8918fabe3cc5da473131161b633f7",
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Cancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Vest\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"}],\"name\":\"calcDistribution\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"scheduleNumber\",\"type\":\"uint256\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"locked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amount\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isFixed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"cliffWeeks\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vestingWeeks\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"}],\"name\":\"multiVest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"numberOfSchedules\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"scheduleId\",\"type\":\"uint256\"}],\"name\":\"rug\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"schedules\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cliffTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isFixed\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isFixed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"cliffWeeks\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vestingWeeks\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"}],\"name\":\"vest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"calcDistribution(uint256,uint256,uint256,uint256)\":{\"params\":{\"amount\":\"the total outstanding amount to be claimed for this vesting schedule.\",\"currentTime\":\"the current timestamp.\",\"endTime\":\"the timestamp this vesting schedule ends.\",\"startTime\":\"the timestamp this vesting schedule started.\"},\"returns\":{\"_0\":\"calculates the amount of tokens to distribute to an account at any instance in time, based off some         total claimable amount.\"}},\"claim(uint256)\":{\"params\":{\"scheduleNumber\":\"which schedule the user is claiming against\"}},\"multiVest(address[],uint256[],address,bool,uint256,uint256,uint256)\":{\"details\":\"adds a new Schedule to the schedules mapping.\",\"params\":{\"accounts\":\"an array of the accounts that the vesting schedules are being set up for.                 Will be able to claim tokens after the cliff period.\",\"amount\":\"an array of the amount of tokens being vested for each user.\",\"asset\":\"the asset that the user is being vested\",\"cliffWeeks\":\"the number of weeks that the cliff will be present at.\",\"isFixed\":\"bool setting if these vesting schedules can be rugged or not.\",\"startTime\":\"the timestamp for when this vesting should have started\",\"vestingWeeks\":\"the number of weeks the tokens will vest over (linearly)\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"rug(address,uint256)\":{\"details\":\"Any outstanding tokens are returned to the system.\",\"params\":{\"account\":\"the account of the user whos vesting schedule is being cancelled.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"vest(address,uint256,address,bool,uint256,uint256,uint256)\":{\"details\":\"adds a new Schedule to the schedules mapping.\",\"params\":{\"account\":\"the account that a vesting schedule is being set up for. Will be able to claim tokens after                the cliff period.\",\"amount\":\"the amount of tokens being vested for the user.\",\"asset\":\"the asset that the user is being vested\",\"cliffWeeks\":\"the number of weeks that the cliff will be present at.\",\"isFixed\":\"a flag for if the vesting schedule is fixed or not. Fixed vesting schedules can't be cancelled.\",\"startTime\":\"the timestamp for when this vesting should have started\",\"vestingWeeks\":\"the number of weeks the tokens will vest over (linearly)\"}},\"withdraw(uint256,address)\":{\"details\":\"blocks withdrawing locked tokens.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"claim(uint256)\":{\"notice\":\"allows users to claim vested tokens if the cliff time has passed.\"},\"multiVest(address[],uint256[],address,bool,uint256,uint256,uint256)\":{\"notice\":\"Sets up vesting schedules for multiple users within 1 transaction.\"},\"rug(address,uint256)\":{\"notice\":\"Allows a vesting schedule to be cancelled.\"},\"vest(address,uint256,address,bool,uint256,uint256,uint256)\":{\"notice\":\"Sets up a vesting schedule for a set user.\"},\"withdraw(uint256,address)\":{\"notice\":\"Withdraws TCR tokens from the contract.\"}},\"notice\":\"Tracer Standard Vesting Contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Vesting.sol\":\"Vesting\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _setOwner(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _setOwner(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _setOwner(newOwner);\\n    }\\n\\n    function _setOwner(address newOwner) private {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x95098bd1d9c8dec4d80d3dedb88a0d949fa0d740ee99f2aa466bc308216ca6d5\",\"license\":\"MIT\"},\"contracts/Vesting.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\npragma solidity 0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\n/**\\n * Tracer Standard Vesting Contract\\n */\\ncontract Vesting is Ownable {\\n    struct Schedule {\\n        uint256 totalAmount;\\n        uint256 claimedAmount;\\n        uint256 startTime;\\n        uint256 cliffTime;\\n        uint256 endTime;\\n        bool isFixed;\\n        address asset;\\n    }\\n\\n    // user => scheduleId => schedule\\n    mapping(address => mapping(uint256 => Schedule)) public schedules;\\n    mapping(address => uint256) public numberOfSchedules;\\n\\n    mapping(address => uint256) public locked;\\n\\n    event Claim(address indexed claimer, uint256 amount);\\n    event Vest(address indexed to, uint256 amount);\\n    event Cancelled(address account);\\n\\n    constructor() {}\\n\\n    /**\\n     * @notice Sets up a vesting schedule for a set user.\\n     * @dev adds a new Schedule to the schedules mapping.\\n     * @param account the account that a vesting schedule is being set up for. Will be able to claim tokens after\\n     *                the cliff period.\\n     * @param amount the amount of tokens being vested for the user.\\n     * @param asset the asset that the user is being vested\\n     * @param isFixed a flag for if the vesting schedule is fixed or not. Fixed vesting schedules can't be cancelled.\\n     * @param cliffWeeks the number of weeks that the cliff will be present at.\\n     * @param vestingWeeks the number of weeks the tokens will vest over (linearly)\\n     * @param startTime the timestamp for when this vesting should have started\\n     */\\n    function vest(\\n        address account,\\n        uint256 amount,\\n        address asset,\\n        bool isFixed,\\n        uint256 cliffWeeks,\\n        uint256 vestingWeeks,\\n        uint256 startTime\\n    ) public onlyOwner {\\n        // ensure cliff is shorter than vesting\\n        require(\\n            vestingWeeks >= cliffWeeks,\\n            \\\"Vesting: cliff after vesting period\\\"\\n        );\\n\\n        uint256 currentLocked = locked[asset];\\n\\n        // require the token is present\\n        require(\\n            IERC20(asset).balanceOf(address(this)) >= currentLocked + amount,\\n            \\\"Vesting: Not enough tokens\\\"\\n        );\\n\\n        // create the schedule\\n        uint256 currentNumSchedules = numberOfSchedules[account];\\n        schedules[account][currentNumSchedules] = Schedule(\\n            amount,\\n            0,\\n            startTime,\\n            startTime + (cliffWeeks * 1 weeks),\\n            startTime + (vestingWeeks * 1 weeks),\\n            isFixed,\\n            asset\\n        );\\n        numberOfSchedules[account] = currentNumSchedules + 1;\\n        locked[asset] = currentLocked + amount;\\n        emit Vest(account, amount);\\n    }\\n\\n    /**\\n     * @notice Sets up vesting schedules for multiple users within 1 transaction.\\n     * @dev adds a new Schedule to the schedules mapping.\\n     * @param accounts an array of the accounts that the vesting schedules are being set up for.\\n     *                 Will be able to claim tokens after the cliff period.\\n     * @param amount an array of the amount of tokens being vested for each user.\\n     * @param asset the asset that the user is being vested\\n     * @param isFixed bool setting if these vesting schedules can be rugged or not.\\n     * @param cliffWeeks the number of weeks that the cliff will be present at.\\n     * @param vestingWeeks the number of weeks the tokens will vest over (linearly)\\n     * @param startTime the timestamp for when this vesting should have started\\n     */\\n    function multiVest(\\n        address[] calldata accounts,\\n        uint256[] calldata amount,\\n        address asset,\\n        bool isFixed,\\n        uint256 cliffWeeks,\\n        uint256 vestingWeeks,\\n        uint256 startTime\\n    ) external onlyOwner {\\n        uint256 numberOfAccounts = accounts.length;\\n        require(\\n            amount.length == numberOfAccounts,\\n            \\\"Vesting: Array lengths differ\\\"\\n        );\\n        for (uint256 i = 0; i < numberOfAccounts; i++) {\\n            vest(\\n                accounts[i],\\n                amount[i],\\n                asset,\\n                isFixed,\\n                cliffWeeks,\\n                vestingWeeks,\\n                startTime\\n            );\\n        }\\n    }\\n\\n    /**\\n     * @notice allows users to claim vested tokens if the cliff time has passed.\\n     * @param scheduleNumber which schedule the user is claiming against\\n     */\\n    function claim(uint256 scheduleNumber) public {\\n        Schedule storage schedule = schedules[msg.sender][scheduleNumber];\\n        require(\\n            schedule.cliffTime <= block.timestamp,\\n            \\\"Vesting: cliff not reached\\\"\\n        );\\n        require(schedule.totalAmount > 0, \\\"Vesting: not claimable\\\");\\n\\n        // Get the amount to be distributed\\n        uint256 amount = calcDistribution(\\n            schedule.totalAmount,\\n            block.timestamp,\\n            schedule.startTime,\\n            schedule.endTime\\n        );\\n\\n        // Cap the amount at the total amount\\n        amount = amount > schedule.totalAmount ? schedule.totalAmount : amount;\\n        uint256 amountToTransfer = amount - schedule.claimedAmount;\\n        schedule.claimedAmount = amount; // set new claimed amount based off the curve\\n        locked[schedule.asset] = locked[schedule.asset] - amountToTransfer;\\n        IERC20(schedule.asset).transfer(msg.sender, amountToTransfer);\\n        emit Claim(msg.sender, amount);\\n    }\\n\\n    /**\\n     * @notice Allows a vesting schedule to be cancelled.\\n     * @dev Any outstanding tokens are returned to the system.\\n     * @param account the account of the user whos vesting schedule is being cancelled.\\n     */\\n    function rug(address account, uint256 scheduleId) public onlyOwner {\\n        Schedule storage schedule = schedules[account][scheduleId];\\n        require(!schedule.isFixed, \\\"Vesting: Account is fixed\\\");\\n        uint256 outstandingAmount = schedule.totalAmount -\\n            schedule.claimedAmount;\\n        require(outstandingAmount != 0, \\\"Vesting: no outstanding tokens\\\");\\n        schedule.totalAmount = 0;\\n        locked[schedule.asset] = locked[schedule.asset] - outstandingAmount;\\n        IERC20(schedule.asset).transfer(owner(), outstandingAmount);\\n        emit Cancelled(account);\\n    }\\n\\n    /**\\n     * @return calculates the amount of tokens to distribute to an account at any instance in time, based off some\\n     *         total claimable amount.\\n     * @param amount the total outstanding amount to be claimed for this vesting schedule.\\n     * @param currentTime the current timestamp.\\n     * @param startTime the timestamp this vesting schedule started.\\n     * @param endTime the timestamp this vesting schedule ends.\\n     */\\n    function calcDistribution(\\n        uint256 amount,\\n        uint256 currentTime,\\n        uint256 startTime,\\n        uint256 endTime\\n    ) public pure returns (uint256) {\\n        // avoid uint underflow\\n        if (currentTime < startTime) {\\n            return 0;\\n        }\\n\\n        // if endTime < startTime, this will throw. Since endTime should never be\\n        // less than startTime in safe operation, this is fine.\\n        return (amount * (currentTime - startTime)) / (endTime - startTime);\\n    }\\n\\n    /**\\n     * @notice Withdraws TCR tokens from the contract.\\n     * @dev blocks withdrawing locked tokens.\\n     */\\n    function withdraw(uint256 amount, address asset) public onlyOwner {\\n        IERC20 token = IERC20(asset);\\n        require(\\n            token.balanceOf(address(this)) - locked[asset] >= amount,\\n            \\\"Vesting: Can't withdraw\\\"\\n        );\\n        token.transfer(owner(), amount);\\n    }\\n}\\n\",\"keccak256\":\"0x09155a2570d212b7d4fbcad616e04bc87b9e9ccab0c08cb1e89ea17faab217dd\",\"license\":\"GPL-3.0-only\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b611fe38061010d6000396000f3fe608060405234801561001057600080fd5b50600436106100b35760003560e01c80638da5cb5b116100715780638da5cb5b146101685780639c4e64e014610186578063cbf9fe5f146101b6578063df681c14146101e6578063f2fde38b14610216578063ffb4b1be14610232576100b3565b8062f714ce146100b85780630d535883146100d457806329761136146100f0578063379607f51461010c578063715018a614610128578063854e968214610132575b600080fd5b6100d260048036038101906100cd91906117ad565b61024e565b005b6100ee60048036038101906100e991906115be565b61047e565b005b61010a6004803603810190610105919061165c565b6108fd565b005b6101266004803603810190610121919061175b565b610a8c565b005b610130610d9c565b005b61014c60048036038101906101479190611582565b610e24565b60405161015f9796959493929190611ce4565b60405180910390f35b610170610ea0565b60405161017d9190611b45565b60405180910390f35b6101a0600480360381019061019b91906117e9565b610ec9565b6040516101ad9190611cc9565b60405180910390f35b6101d060048036038101906101cb9190611559565b610f14565b6040516101dd9190611cc9565b60405180910390f35b61020060048036038101906101fb9190611559565b610f2c565b60405161020d9190611cc9565b60405180910390f35b610230600480360381019061022b9190611559565b610f44565b005b61024c60048036038101906102479190611582565b61103c565b005b610256611390565b73ffffffffffffffffffffffffffffffffffffffff16610274610ea0565b73ffffffffffffffffffffffffffffffffffffffff16146102ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102c190611c29565b60405180910390fd5b600081905082600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016103499190611b45565b60206040518083038186803b15801561036157600080fd5b505afa158015610375573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103999190611784565b6103a39190611e45565b10156103e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103db90611b89565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb610408610ea0565b856040518363ffffffff1660e01b8152600401610426929190611b60565b602060405180830381600087803b15801561044057600080fd5b505af1158015610454573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104789190611732565b50505050565b610486611390565b73ffffffffffffffffffffffffffffffffffffffff166104a4610ea0565b73ffffffffffffffffffffffffffffffffffffffff16146104fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f190611c29565b60405180910390fd5b8282101561053d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053490611c69565b60405180910390fd5b6000600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050868161058d9190611d64565b8673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016105c69190611b45565b60206040518083038186803b1580156105de57600080fd5b505afa1580156105f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106169190611784565b1015610657576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064e90611c89565b60405180910390fd5b6000600260008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506040518060e001604052808981526020016000815260200184815260200162093a80876106c89190611deb565b856106d39190611d64565b815260200162093a80866106e79190611deb565b856106f29190611d64565b815260200187151581526020018873ffffffffffffffffffffffffffffffffffffffff16815250600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020600082015181600001556020820151816001015560408201518160020155606082015181600301556080820151816004015560a08201518160050160006101000a81548160ff02191690831515021790555060c08201518160050160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050506001816108129190611d64565b600260008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555087826108619190611d64565b600360008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508873ffffffffffffffffffffffffffffffffffffffff167fd4a50953e9ae2104f507446be8391c79b33e1e86e626473e34bb79eb5fea1f3e896040516108ea9190611cc9565b60405180910390a2505050505050505050565b610905611390565b73ffffffffffffffffffffffffffffffffffffffff16610923610ea0565b73ffffffffffffffffffffffffffffffffffffffff1614610979576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097090611c29565b60405180910390fd5b60008989905090508088889050146109c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109bd90611c09565b60405180910390fd5b60005b81811015610a7f57610a6c8b8b83818110610a0d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050602002016020810190610a229190611559565b8a8a84818110610a5b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90506020020135898989898961047e565b8080610a7790611ec1565b9150506109c9565b5050505050505050505050565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002090504281600301541115610b27576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1e90611be9565b60405180910390fd5b6000816000015411610b6e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b6590611ca9565b60405180910390fd5b6000610b8882600001544284600201548560040154610ec9565b905081600001548111610b9b5780610ba1565b81600001545b90506000826001015482610bb59190611e45565b905081836001018190555080600360008560050160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610c2f9190611e45565b600360008560050160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508260050160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610cf5929190611b60565b602060405180830381600087803b158015610d0f57600080fd5b505af1158015610d23573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d479190611732565b503373ffffffffffffffffffffffffffffffffffffffff167f47cee97cb7acd717b3c0aa1435d004cd5b3c8c57d70dbceb4e4458bbd60e39d483604051610d8e9190611cc9565b60405180910390a250505050565b610da4611390565b73ffffffffffffffffffffffffffffffffffffffff16610dc2610ea0565b73ffffffffffffffffffffffffffffffffffffffff1614610e18576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e0f90611c29565b60405180910390fd5b610e226000611398565b565b6001602052816000526040600020602052806000526040600020600091509150508060000154908060010154908060020154908060030154908060040154908060050160009054906101000a900460ff16908060050160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905087565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600082841015610edc5760009050610f0c565b8282610ee89190611e45565b8385610ef49190611e45565b86610eff9190611deb565b610f099190611dba565b90505b949350505050565b60036020528060005260406000206000915090505481565b60026020528060005260406000206000915090505481565b610f4c611390565b73ffffffffffffffffffffffffffffffffffffffff16610f6a610ea0565b73ffffffffffffffffffffffffffffffffffffffff1614610fc0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fb790611c29565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611030576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161102790611ba9565b60405180910390fd5b61103981611398565b50565b611044611390565b73ffffffffffffffffffffffffffffffffffffffff16611062610ea0565b73ffffffffffffffffffffffffffffffffffffffff16146110b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110af90611c29565b60405180910390fd5b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002090508060050160009054906101000a900460ff161561115e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161115590611bc9565b60405180910390fd5b6000816001015482600001546111749190611e45565b905060008114156111ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111b190611c49565b60405180910390fd5b6000826000018190555080600360008460050160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546112339190611e45565b600360008460050160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508160050160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb6112e2610ea0565b836040518363ffffffff1660e01b8152600401611300929190611b60565b602060405180830381600087803b15801561131a57600080fd5b505af115801561132e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113529190611732565b507f398bd6b21ae4164ec322fb0eb8c2eb6277f36fd41903fbbed594dfe125591281846040516113829190611b45565b60405180910390a150505050565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008135905061146b81611f68565b92915050565b60008083601f84011261148357600080fd5b8235905067ffffffffffffffff81111561149c57600080fd5b6020830191508360208202830111156114b457600080fd5b9250929050565b60008083601f8401126114cd57600080fd5b8235905067ffffffffffffffff8111156114e657600080fd5b6020830191508360208202830111156114fe57600080fd5b9250929050565b60008135905061151481611f7f565b92915050565b60008151905061152981611f7f565b92915050565b60008135905061153e81611f96565b92915050565b60008151905061155381611f96565b92915050565b60006020828403121561156b57600080fd5b60006115798482850161145c565b91505092915050565b6000806040838503121561159557600080fd5b60006115a38582860161145c565b92505060206115b48582860161152f565b9150509250929050565b600080600080600080600060e0888a0312156115d957600080fd5b60006115e78a828b0161145c565b97505060206115f88a828b0161152f565b96505060406116098a828b0161145c565b955050606061161a8a828b01611505565b945050608061162b8a828b0161152f565b93505060a061163c8a828b0161152f565b92505060c061164d8a828b0161152f565b91505092959891949750929550565b600080600080600080600080600060e08a8c03121561167a57600080fd5b60008a013567ffffffffffffffff81111561169457600080fd5b6116a08c828d01611471565b995099505060208a013567ffffffffffffffff8111156116bf57600080fd5b6116cb8c828d016114bb565b975097505060406116de8c828d0161145c565b95505060606116ef8c828d01611505565b94505060806117008c828d0161152f565b93505060a06117118c828d0161152f565b92505060c06117228c828d0161152f565b9150509295985092959850929598565b60006020828403121561174457600080fd5b60006117528482850161151a565b91505092915050565b60006020828403121561176d57600080fd5b600061177b8482850161152f565b91505092915050565b60006020828403121561179657600080fd5b60006117a484828501611544565b91505092915050565b600080604083850312156117c057600080fd5b60006117ce8582860161152f565b92505060206117df8582860161145c565b9150509250929050565b600080600080608085870312156117ff57600080fd5b600061180d8782880161152f565b945050602061181e8782880161152f565b935050604061182f8782880161152f565b92505060606118408782880161152f565b91505092959194509250565b61185581611e79565b82525050565b61186481611e8b565b82525050565b6000611877601783611d53565b91507f56657374696e673a2043616e27742077697468647261770000000000000000006000830152602082019050919050565b60006118b7602683611d53565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061191d601983611d53565b91507f56657374696e673a204163636f756e74206973206669786564000000000000006000830152602082019050919050565b600061195d601a83611d53565b91507f56657374696e673a20636c696666206e6f7420726561636865640000000000006000830152602082019050919050565b600061199d601d83611d53565b91507f56657374696e673a204172726179206c656e67746873206469666665720000006000830152602082019050919050565b60006119dd602083611d53565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b6000611a1d601e83611d53565b91507f56657374696e673a206e6f206f75747374616e64696e6720746f6b656e7300006000830152602082019050919050565b6000611a5d602383611d53565b91507f56657374696e673a20636c6966662061667465722076657374696e672070657260008301527f696f6400000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611ac3601a83611d53565b91507f56657374696e673a204e6f7420656e6f75676820746f6b656e730000000000006000830152602082019050919050565b6000611b03601683611d53565b91507f56657374696e673a206e6f7420636c61696d61626c65000000000000000000006000830152602082019050919050565b611b3f81611eb7565b82525050565b6000602082019050611b5a600083018461184c565b92915050565b6000604082019050611b75600083018561184c565b611b826020830184611b36565b9392505050565b60006020820190508181036000830152611ba28161186a565b9050919050565b60006020820190508181036000830152611bc2816118aa565b9050919050565b60006020820190508181036000830152611be281611910565b9050919050565b60006020820190508181036000830152611c0281611950565b9050919050565b60006020820190508181036000830152611c2281611990565b9050919050565b60006020820190508181036000830152611c42816119d0565b9050919050565b60006020820190508181036000830152611c6281611a10565b9050919050565b60006020820190508181036000830152611c8281611a50565b9050919050565b60006020820190508181036000830152611ca281611ab6565b9050919050565b60006020820190508181036000830152611cc281611af6565b9050919050565b6000602082019050611cde6000830184611b36565b92915050565b600060e082019050611cf9600083018a611b36565b611d066020830189611b36565b611d136040830188611b36565b611d206060830187611b36565b611d2d6080830186611b36565b611d3a60a083018561185b565b611d4760c083018461184c565b98975050505050505050565b600082825260208201905092915050565b6000611d6f82611eb7565b9150611d7a83611eb7565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611daf57611dae611f0a565b5b828201905092915050565b6000611dc582611eb7565b9150611dd083611eb7565b925082611de057611ddf611f39565b5b828204905092915050565b6000611df682611eb7565b9150611e0183611eb7565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611e3a57611e39611f0a565b5b828202905092915050565b6000611e5082611eb7565b9150611e5b83611eb7565b925082821015611e6e57611e6d611f0a565b5b828203905092915050565b6000611e8482611e97565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000611ecc82611eb7565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611eff57611efe611f0a565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b611f7181611e79565b8114611f7c57600080fd5b50565b611f8881611e8b565b8114611f9357600080fd5b50565b611f9f81611eb7565b8114611faa57600080fd5b5056fea2646970667358221220ebb24c6d8db5b55649a69101c1fe2b584d857e6000e0c9c8f177c41480dceceb64736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100b35760003560e01c80638da5cb5b116100715780638da5cb5b146101685780639c4e64e014610186578063cbf9fe5f146101b6578063df681c14146101e6578063f2fde38b14610216578063ffb4b1be14610232576100b3565b8062f714ce146100b85780630d535883146100d457806329761136146100f0578063379607f51461010c578063715018a614610128578063854e968214610132575b600080fd5b6100d260048036038101906100cd91906117ad565b61024e565b005b6100ee60048036038101906100e991906115be565b61047e565b005b61010a6004803603810190610105919061165c565b6108fd565b005b6101266004803603810190610121919061175b565b610a8c565b005b610130610d9c565b005b61014c60048036038101906101479190611582565b610e24565b60405161015f9796959493929190611ce4565b60405180910390f35b610170610ea0565b60405161017d9190611b45565b60405180910390f35b6101a0600480360381019061019b91906117e9565b610ec9565b6040516101ad9190611cc9565b60405180910390f35b6101d060048036038101906101cb9190611559565b610f14565b6040516101dd9190611cc9565b60405180910390f35b61020060048036038101906101fb9190611559565b610f2c565b60405161020d9190611cc9565b60405180910390f35b610230600480360381019061022b9190611559565b610f44565b005b61024c60048036038101906102479190611582565b61103c565b005b610256611390565b73ffffffffffffffffffffffffffffffffffffffff16610274610ea0565b73ffffffffffffffffffffffffffffffffffffffff16146102ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102c190611c29565b60405180910390fd5b600081905082600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016103499190611b45565b60206040518083038186803b15801561036157600080fd5b505afa158015610375573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103999190611784565b6103a39190611e45565b10156103e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103db90611b89565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb610408610ea0565b856040518363ffffffff1660e01b8152600401610426929190611b60565b602060405180830381600087803b15801561044057600080fd5b505af1158015610454573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104789190611732565b50505050565b610486611390565b73ffffffffffffffffffffffffffffffffffffffff166104a4610ea0565b73ffffffffffffffffffffffffffffffffffffffff16146104fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f190611c29565b60405180910390fd5b8282101561053d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053490611c69565b60405180910390fd5b6000600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050868161058d9190611d64565b8673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016105c69190611b45565b60206040518083038186803b1580156105de57600080fd5b505afa1580156105f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106169190611784565b1015610657576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064e90611c89565b60405180910390fd5b6000600260008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506040518060e001604052808981526020016000815260200184815260200162093a80876106c89190611deb565b856106d39190611d64565b815260200162093a80866106e79190611deb565b856106f29190611d64565b815260200187151581526020018873ffffffffffffffffffffffffffffffffffffffff16815250600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020600082015181600001556020820151816001015560408201518160020155606082015181600301556080820151816004015560a08201518160050160006101000a81548160ff02191690831515021790555060c08201518160050160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050506001816108129190611d64565b600260008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555087826108619190611d64565b600360008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508873ffffffffffffffffffffffffffffffffffffffff167fd4a50953e9ae2104f507446be8391c79b33e1e86e626473e34bb79eb5fea1f3e896040516108ea9190611cc9565b60405180910390a2505050505050505050565b610905611390565b73ffffffffffffffffffffffffffffffffffffffff16610923610ea0565b73ffffffffffffffffffffffffffffffffffffffff1614610979576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097090611c29565b60405180910390fd5b60008989905090508088889050146109c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109bd90611c09565b60405180910390fd5b60005b81811015610a7f57610a6c8b8b83818110610a0d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050602002016020810190610a229190611559565b8a8a84818110610a5b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90506020020135898989898961047e565b8080610a7790611ec1565b9150506109c9565b5050505050505050505050565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002090504281600301541115610b27576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1e90611be9565b60405180910390fd5b6000816000015411610b6e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b6590611ca9565b60405180910390fd5b6000610b8882600001544284600201548560040154610ec9565b905081600001548111610b9b5780610ba1565b81600001545b90506000826001015482610bb59190611e45565b905081836001018190555080600360008560050160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610c2f9190611e45565b600360008560050160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508260050160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610cf5929190611b60565b602060405180830381600087803b158015610d0f57600080fd5b505af1158015610d23573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d479190611732565b503373ffffffffffffffffffffffffffffffffffffffff167f47cee97cb7acd717b3c0aa1435d004cd5b3c8c57d70dbceb4e4458bbd60e39d483604051610d8e9190611cc9565b60405180910390a250505050565b610da4611390565b73ffffffffffffffffffffffffffffffffffffffff16610dc2610ea0565b73ffffffffffffffffffffffffffffffffffffffff1614610e18576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e0f90611c29565b60405180910390fd5b610e226000611398565b565b6001602052816000526040600020602052806000526040600020600091509150508060000154908060010154908060020154908060030154908060040154908060050160009054906101000a900460ff16908060050160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905087565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600082841015610edc5760009050610f0c565b8282610ee89190611e45565b8385610ef49190611e45565b86610eff9190611deb565b610f099190611dba565b90505b949350505050565b60036020528060005260406000206000915090505481565b60026020528060005260406000206000915090505481565b610f4c611390565b73ffffffffffffffffffffffffffffffffffffffff16610f6a610ea0565b73ffffffffffffffffffffffffffffffffffffffff1614610fc0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fb790611c29565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611030576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161102790611ba9565b60405180910390fd5b61103981611398565b50565b611044611390565b73ffffffffffffffffffffffffffffffffffffffff16611062610ea0565b73ffffffffffffffffffffffffffffffffffffffff16146110b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110af90611c29565b60405180910390fd5b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002090508060050160009054906101000a900460ff161561115e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161115590611bc9565b60405180910390fd5b6000816001015482600001546111749190611e45565b905060008114156111ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111b190611c49565b60405180910390fd5b6000826000018190555080600360008460050160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546112339190611e45565b600360008460050160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508160050160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb6112e2610ea0565b836040518363ffffffff1660e01b8152600401611300929190611b60565b602060405180830381600087803b15801561131a57600080fd5b505af115801561132e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113529190611732565b507f398bd6b21ae4164ec322fb0eb8c2eb6277f36fd41903fbbed594dfe125591281846040516113829190611b45565b60405180910390a150505050565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008135905061146b81611f68565b92915050565b60008083601f84011261148357600080fd5b8235905067ffffffffffffffff81111561149c57600080fd5b6020830191508360208202830111156114b457600080fd5b9250929050565b60008083601f8401126114cd57600080fd5b8235905067ffffffffffffffff8111156114e657600080fd5b6020830191508360208202830111156114fe57600080fd5b9250929050565b60008135905061151481611f7f565b92915050565b60008151905061152981611f7f565b92915050565b60008135905061153e81611f96565b92915050565b60008151905061155381611f96565b92915050565b60006020828403121561156b57600080fd5b60006115798482850161145c565b91505092915050565b6000806040838503121561159557600080fd5b60006115a38582860161145c565b92505060206115b48582860161152f565b9150509250929050565b600080600080600080600060e0888a0312156115d957600080fd5b60006115e78a828b0161145c565b97505060206115f88a828b0161152f565b96505060406116098a828b0161145c565b955050606061161a8a828b01611505565b945050608061162b8a828b0161152f565b93505060a061163c8a828b0161152f565b92505060c061164d8a828b0161152f565b91505092959891949750929550565b600080600080600080600080600060e08a8c03121561167a57600080fd5b60008a013567ffffffffffffffff81111561169457600080fd5b6116a08c828d01611471565b995099505060208a013567ffffffffffffffff8111156116bf57600080fd5b6116cb8c828d016114bb565b975097505060406116de8c828d0161145c565b95505060606116ef8c828d01611505565b94505060806117008c828d0161152f565b93505060a06117118c828d0161152f565b92505060c06117228c828d0161152f565b9150509295985092959850929598565b60006020828403121561174457600080fd5b60006117528482850161151a565b91505092915050565b60006020828403121561176d57600080fd5b600061177b8482850161152f565b91505092915050565b60006020828403121561179657600080fd5b60006117a484828501611544565b91505092915050565b600080604083850312156117c057600080fd5b60006117ce8582860161152f565b92505060206117df8582860161145c565b9150509250929050565b600080600080608085870312156117ff57600080fd5b600061180d8782880161152f565b945050602061181e8782880161152f565b935050604061182f8782880161152f565b92505060606118408782880161152f565b91505092959194509250565b61185581611e79565b82525050565b61186481611e8b565b82525050565b6000611877601783611d53565b91507f56657374696e673a2043616e27742077697468647261770000000000000000006000830152602082019050919050565b60006118b7602683611d53565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061191d601983611d53565b91507f56657374696e673a204163636f756e74206973206669786564000000000000006000830152602082019050919050565b600061195d601a83611d53565b91507f56657374696e673a20636c696666206e6f7420726561636865640000000000006000830152602082019050919050565b600061199d601d83611d53565b91507f56657374696e673a204172726179206c656e67746873206469666665720000006000830152602082019050919050565b60006119dd602083611d53565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b6000611a1d601e83611d53565b91507f56657374696e673a206e6f206f75747374616e64696e6720746f6b656e7300006000830152602082019050919050565b6000611a5d602383611d53565b91507f56657374696e673a20636c6966662061667465722076657374696e672070657260008301527f696f6400000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611ac3601a83611d53565b91507f56657374696e673a204e6f7420656e6f75676820746f6b656e730000000000006000830152602082019050919050565b6000611b03601683611d53565b91507f56657374696e673a206e6f7420636c61696d61626c65000000000000000000006000830152602082019050919050565b611b3f81611eb7565b82525050565b6000602082019050611b5a600083018461184c565b92915050565b6000604082019050611b75600083018561184c565b611b826020830184611b36565b9392505050565b60006020820190508181036000830152611ba28161186a565b9050919050565b60006020820190508181036000830152611bc2816118aa565b9050919050565b60006020820190508181036000830152611be281611910565b9050919050565b60006020820190508181036000830152611c0281611950565b9050919050565b60006020820190508181036000830152611c2281611990565b9050919050565b60006020820190508181036000830152611c42816119d0565b9050919050565b60006020820190508181036000830152611c6281611a10565b9050919050565b60006020820190508181036000830152611c8281611a50565b9050919050565b60006020820190508181036000830152611ca281611ab6565b9050919050565b60006020820190508181036000830152611cc281611af6565b9050919050565b6000602082019050611cde6000830184611b36565b92915050565b600060e082019050611cf9600083018a611b36565b611d066020830189611b36565b611d136040830188611b36565b611d206060830187611b36565b611d2d6080830186611b36565b611d3a60a083018561185b565b611d4760c083018461184c565b98975050505050505050565b600082825260208201905092915050565b6000611d6f82611eb7565b9150611d7a83611eb7565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611daf57611dae611f0a565b5b828201905092915050565b6000611dc582611eb7565b9150611dd083611eb7565b925082611de057611ddf611f39565b5b828204905092915050565b6000611df682611eb7565b9150611e0183611eb7565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611e3a57611e39611f0a565b5b828202905092915050565b6000611e5082611eb7565b9150611e5b83611eb7565b925082821015611e6e57611e6d611f0a565b5b828203905092915050565b6000611e8482611e97565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000611ecc82611eb7565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611eff57611efe611f0a565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b611f7181611e79565b8114611f7c57600080fd5b50565b611f8881611e8b565b8114611f9357600080fd5b50565b611f9f81611eb7565b8114611faa57600080fd5b5056fea2646970667358221220ebb24c6d8db5b55649a69101c1fe2b584d857e6000e0c9c8f177c41480dceceb64736f6c63430008000033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "calcDistribution(uint256,uint256,uint256,uint256)": {
        "params": {
          "amount": "the total outstanding amount to be claimed for this vesting schedule.",
          "currentTime": "the current timestamp.",
          "endTime": "the timestamp this vesting schedule ends.",
          "startTime": "the timestamp this vesting schedule started."
        },
        "returns": {
          "_0": "calculates the amount of tokens to distribute to an account at any instance in time, based off some         total claimable amount."
        }
      },
      "claim(uint256)": {
        "params": {
          "scheduleNumber": "which schedule the user is claiming against"
        }
      },
      "multiVest(address[],uint256[],address,bool,uint256,uint256,uint256)": {
        "details": "adds a new Schedule to the schedules mapping.",
        "params": {
          "accounts": "an array of the accounts that the vesting schedules are being set up for.                 Will be able to claim tokens after the cliff period.",
          "amount": "an array of the amount of tokens being vested for each user.",
          "asset": "the asset that the user is being vested",
          "cliffWeeks": "the number of weeks that the cliff will be present at.",
          "isFixed": "bool setting if these vesting schedules can be rugged or not.",
          "startTime": "the timestamp for when this vesting should have started",
          "vestingWeeks": "the number of weeks the tokens will vest over (linearly)"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "rug(address,uint256)": {
        "details": "Any outstanding tokens are returned to the system.",
        "params": {
          "account": "the account of the user whos vesting schedule is being cancelled."
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "vest(address,uint256,address,bool,uint256,uint256,uint256)": {
        "details": "adds a new Schedule to the schedules mapping.",
        "params": {
          "account": "the account that a vesting schedule is being set up for. Will be able to claim tokens after                the cliff period.",
          "amount": "the amount of tokens being vested for the user.",
          "asset": "the asset that the user is being vested",
          "cliffWeeks": "the number of weeks that the cliff will be present at.",
          "isFixed": "a flag for if the vesting schedule is fixed or not. Fixed vesting schedules can't be cancelled.",
          "startTime": "the timestamp for when this vesting should have started",
          "vestingWeeks": "the number of weeks the tokens will vest over (linearly)"
        }
      },
      "withdraw(uint256,address)": {
        "details": "blocks withdrawing locked tokens."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "claim(uint256)": {
        "notice": "allows users to claim vested tokens if the cliff time has passed."
      },
      "multiVest(address[],uint256[],address,bool,uint256,uint256,uint256)": {
        "notice": "Sets up vesting schedules for multiple users within 1 transaction."
      },
      "rug(address,uint256)": {
        "notice": "Allows a vesting schedule to be cancelled."
      },
      "vest(address,uint256,address,bool,uint256,uint256,uint256)": {
        "notice": "Sets up a vesting schedule for a set user."
      },
      "withdraw(uint256,address)": {
        "notice": "Withdraws TCR tokens from the contract."
      }
    },
    "notice": "Tracer Standard Vesting Contract",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/Vesting.sol:Vesting",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 824,
        "contract": "contracts/Vesting.sol:Vesting",
        "label": "schedules",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Schedule)817_storage))"
      },
      {
        "astId": 828,
        "contract": "contracts/Vesting.sol:Vesting",
        "label": "numberOfSchedules",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 832,
        "contract": "contracts/Vesting.sol:Vesting",
        "label": "locked",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_struct(Schedule)817_storage))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => struct Vesting.Schedule))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_struct(Schedule)817_storage)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_struct(Schedule)817_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Vesting.Schedule)",
        "numberOfBytes": "32",
        "value": "t_struct(Schedule)817_storage"
      },
      "t_struct(Schedule)817_storage": {
        "encoding": "inplace",
        "label": "struct Vesting.Schedule",
        "members": [
          {
            "astId": 804,
            "contract": "contracts/Vesting.sol:Vesting",
            "label": "totalAmount",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 806,
            "contract": "contracts/Vesting.sol:Vesting",
            "label": "claimedAmount",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 808,
            "contract": "contracts/Vesting.sol:Vesting",
            "label": "startTime",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 810,
            "contract": "contracts/Vesting.sol:Vesting",
            "label": "cliffTime",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 812,
            "contract": "contracts/Vesting.sol:Vesting",
            "label": "endTime",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 814,
            "contract": "contracts/Vesting.sol:Vesting",
            "label": "isFixed",
            "offset": 0,
            "slot": "5",
            "type": "t_bool"
          },
          {
            "astId": 816,
            "contract": "contracts/Vesting.sol:Vesting",
            "label": "asset",
            "offset": 1,
            "slot": "5",
            "type": "t_address"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}